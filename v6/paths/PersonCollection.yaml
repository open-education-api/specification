get:
  summary: GET /persons
  operationId: listPersons
  description: Get an ordered list of all persons.
  tags:
    - persons
  parameters:
    - $ref: '../parameters/primaryCode.yaml'
    - $ref: '../parameters/pageSize.yaml'
    - $ref: '../parameters/pageNumber.yaml'
    - $ref: '../parameters/consumer.yaml'
    - $ref: '../parameters/personSearch.yaml'
    - name: affiliations
      in: query
      description: Filter by affiliations
      required: false
      schema:
        $ref: '../enumerations/personAffiliations.yaml'
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: '../schemas/Pagination.yaml'
              - type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: '../schemas/Person.yaml'
                  ext:
                    $ref: '../schemas/Ext.yaml'
    '400':
      $ref: '../schemas/ErrorBadRequest.yaml'
    '401':
      $ref: '../schemas/ErrorUnauthorized.yaml'
    '403':
      $ref: '../schemas/ErrorForbidden.yaml'
    '405':
      $ref: '../schemas/ErrorMethodNotAllowed.yaml'
    '429':
      $ref: '../schemas/ErrorTooManyRequests.yaml'
    '500':
      $ref: '../schemas/ErrorInternalServerError.yaml'

post:
  summary: POST /persons
  operationId: createPerson
  description: POST a single person.
  tags:
    - persons
  requestBody:
    required: true
    content:
      application/json:
          schema:
            allOf:
              - $ref: '../schemas/PersonProperties.yaml'
  

  responses:
    '201':
      description: CREATED
      content:
        application/json:
          schema:
            allOf:
              - $ref: '../schemas/PersonId.yaml'
              - $ref: '../schemas/PostResponse.yaml'

    '400':
      $ref: '../schemas/ErrorBadRequest.yaml'
