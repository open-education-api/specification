get:
  summary: GET /program-offering-associations/{programOfferingAssociationId}
  operationId: listProgramOfferingAssociationById
  description: Get a single program offering association.
  tags:
    - program offering associations
  parameters:
    - name: programOfferingAssociationId
      in: path
      description: Program offering association ID
      required: true
      schema:
        type: string
        format: uuid
    - name: expand
      in: query
      explode: false
      description: Optional properties to expand, separated by a comma
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - person
            - program_offering
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            $ref: '../schemas/ProgramOfferingAssociationFull.yaml'          
    '400':
      $ref: '../schemas/ErrorBadRequest.yaml'
    '401':
      $ref: '../schemas/ErrorUnauthorized.yaml'
    '403':
      $ref: '../schemas/ErrorForbidden.yaml'
    '404':
      $ref: '../schemas/ErrorNotFound.yaml'
    '405':
      $ref: '../schemas/ErrorMethodNotAllowed.yaml'
    '429':
      $ref: '../schemas/ErrorTooManyRequests.yaml'
    '500':
      $ref: '../schemas/ErrorInternalServerError.yaml'




patch:
  summary: PATCH /program-offering-associations/{programOfferingAssociationId}
  operationId: partialUpdateProgramOfferingAssociationById
  description: |
    Update the status or result of an enrollment. Other elements of the association object COULD 
    also be PATCHED. But are not likely and have therefor not been included in this endpoint.
    Implementation of the PATCH activity is based on use PATCH with JSON Merge Patch standard, 
    a specialized media type `application/merge-patch+json` for partial resource representation 
    to update parts of resource objects.

    Security must be implemented at the level of the actual deployment rather than in the core 
    specification. This means that the specification remains neutral, while concrete security 
    measures can be applied in practice using established techniques such as OpenID with fine-grained 
    scopes (for example, write access on associations). The previous inline declaration has therefore
    been removed to avoid conflating implementation details with the specification.

  tags:
    - program offering associations

  parameters:
    - name: programOfferingAssociationId
      in: path
      description: The id of the association to update
      required: true
      schema:
        type: string
        format: uuid

  requestBody:
    required: true
    content:
      application/merge-patch+json:
        schema:
          properties:
            remoteState:
              $ref: '../enumerations/remoteAssociationState.yaml'
            result:
              $ref: '../schemas/ProgramOfferingAssociationResult.yaml'  

  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: '../schemas/AssociationId.yaml'
              - $ref: '../schemas/PostResponse.yaml'
              - properties:
                  state:
                    $ref: '../enumerations/associationState.yaml' 

    '400':
      $ref: '../schemas/ErrorBadRequest.yaml'

put:
  summary: PUT /program-offering-associations/{programOfferingAssociationId}
  description: |
    PUT a single program offering association to enroll a person on specific association that can later be retreived.  
  operationId: replaceProgramOfferingAssociationById
  tags:
    - program offering associations
  parameters:
    - name: programOfferingAssociationId
      in: path
      description: The id of the association to update
      required: true
      schema:
        type: string
        format: uuid
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../schemas/ProgramOfferingAssociationExpanded.yaml'


  responses:
    '200':
      description: OK
    '201':
      description: Created

              
    '400':
      $ref: '../schemas/ErrorBadRequest.yaml'
    '401':
      $ref: '../schemas/ErrorUnauthorized.yaml'
    '403':
      $ref: '../schemas/ErrorForbidden.yaml'
    '404':
      $ref: '../schemas/ErrorNotFound.yaml'
    '405':
      $ref: '../schemas/ErrorMethodNotAllowed.yaml'
    '429':
      $ref: '../schemas/ErrorTooManyRequests.yaml'
    '500':
      $ref: '../schemas/ErrorInternalServerError.yaml'
