get:
  summary: GET /test-component-offering-associations/{testComponentOfferingAssociationId}
  operationId: listTestComponentOfferingAssociationById
  description: Get a single test component offering association.
  tags:
    - test component offering associations
  parameters:
    - name: testComponentOfferingAssociationId
      in: path
      description: Test Component Offering Association ID
      required: true
      schema:
        type: string
        format: uuid
    - name: expand
      in: query
      explode: false
      description: Optional properties to expand, separated by a comma
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - person
            - testComponentOffering
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            $ref: '../schemas/TestComponentOfferingAssociationFull.yaml'          
    '400':
      $ref: '../schemas/ErrorBadRequest.yaml'
    '401':
      $ref: '../schemas/ErrorUnauthorized.yaml'
    '403':
      $ref: '../schemas/ErrorForbidden.yaml'
    '404':
      $ref: '../schemas/ErrorNotFound.yaml'
    '405':
      $ref: '../schemas/ErrorMethodNotAllowed.yaml'
    '429':
      $ref: '../schemas/ErrorTooManyRequests.yaml'
    '500':
      $ref: '../schemas/ErrorInternalServerError.yaml'



patch:
  summary: PATCH /test-component-offering-associations/{testComponentOfferingAssociationId}
  operationId: partialUpdateTestComponentOfferingAssociationById
  description: |
    Update the status or result of an enrollment. Other elements of the association object COULD 
    also be PATCHED. But are not likely and have therefor not been included in this endpoint.
    Implementation of the PATCH activity is based on use PATCH with JSON Merge Patch standard, 
    a specialized media type `application/merge-patch+json` for partial resource representation 
    to update parts of resource objects.
  security:
    - openId:
      - associations.write
  tags:
    - test component offering associations

  parameters:
    - name: testComponentOfferingAssociationId
      in: path
      description: The id of the association to update
      required: true
      schema:
        type: string
        format: uuid

  requestBody:
    required: true
    content:
      application/merge-patch+json:
        schema:
          properties:
            remoteState:
              $ref: '../enumerations/remoteAssociationState.yaml'
            result:
              $ref: '../schemas/TestComponentOfferingAssociationResult.yaml'


  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: '../schemas/AssociationId.yaml'
              - $ref: '../schemas/PostResponse.yaml'
              - properties:
                  state:
                    $ref: '../enumerations/associationState.yaml' 

    '400':
      $ref: '../schemas/ErrorBadRequest.yaml'

put:
  summary: PUT /test-component-offering-associations/{testComponentOfferingAssociationId}
  description: |
    PUT a single test component offering association to enroll a person on s specific association that can later be retreived.  
  operationId: replaceTestComponentOfferingAssociationById
  tags:
    - test component offering associations
  parameters:
    - name: testComponentOfferingAssociationId
      in: path
      description: The id of the association to update
      required: true
      schema:
        type: string
        format: uuid
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../schemas/TestComponentOfferingAssociationExpanded.yaml'
        examples:
          Add student to created offering (zitting) (flow 2.2.B and 2.3):
            value:
              #associationId is padparameter en ook mogelijk toegevoegd in body
              #volgorde conform ooapi-v5
              associationId: "123e4567-e89b-12d3-a456-426614174000"
              role: student
              state: associated
              consumers:
              - consumerKey: nl-test-admin
                extraTimeInMin: 30
                personalNeeds: [extraTime,spoken,spell-checker-on-screen]
              person:
                personId: "123e4567-e89b-12d3-a456-426614174000"
                primaryCode:
                  codeType: studentNumber
                  code: "1234567"
                givenName: Maartje
                preferredName: Maar
                surnamePrefix: van
                surname: Damme
                displayName: "Maartje van Damme"
                activeEnrollment: true
                affiliations: [student]
                mail: vandamme.mcw@student.roc.nl
                languageOfChoice: [nl-NL]
                otherCodes: [
                  {
                    codeType: "accountId",
                    code: "s1234567@student.roc.nl"
                    # surfconext identifier
                  },
                  {
                    codeType: "eckid",
                    code: "https://roc.nl/8078d3...28bc85"
                    # eckid cross chain
                  }
                ]
              #id van offering op volgende regel is redendant want ook als padparameter
              offering: "123e4567-e89b-12d3-a456-134564174000"

          Change student enrollment to offering (zitting) (flow 2.x):
            value:
              #associationId is padparameter en ook mogelijk toegevoegd in body
              #volgorde conform ooapi-v5
              #associationType op volgende regel ontbreekt in endpoint-definitie
              associationId: "123e4567-e89b-12d3-a456-426614174000"
              role: student
              state: associated
              consumers:
              - consumerKey: nl-test-admin
                extraTimeInMin: 30
                personalNeeds: [extraTime,spoken,spell-checker-on-screen]
              person: "123e4567-e89b-12d3-a456-426614174000"
              #id van offering op volgende regel is redendant want ook als padparameter
              offering: "123e4567-e89b-12d3-a456-134564174000"    


  responses:
    '200':
      description: OK
    '201':
      description: Created

              
    '400':
      $ref: '../schemas/ErrorBadRequest.yaml'
    '401':
      $ref: '../schemas/ErrorUnauthorized.yaml'
    '403':
      $ref: '../schemas/ErrorForbidden.yaml'
    '404':
      $ref: '../schemas/ErrorNotFound.yaml'
    '405':
      $ref: '../schemas/ErrorMethodNotAllowed.yaml'
    '429':
      $ref: '../schemas/ErrorTooManyRequests.yaml'
    '500':
      $ref: '../schemas/ErrorInternalServerError.yaml'
